import logging
from datetime import datetime, timedelta, timezone
from telegram.ext import CallbackContext
from telegram import InlineKeyboardButton, InlineKeyboardMarkup

from database import check_due_reminders, set_reminder

logger = logging.getLogger(__name__)

async def send_reminder_notification(context: CallbackContext) -> None:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö"""
    logger.info("–ó–∞–ø—É—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π")
    logger.info(f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    due_tasks = check_due_reminders()
    logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –Ω–∞ {datetime.now(timezone(timedelta(hours=3)))}: –Ω–∞–π–¥–µ–Ω–æ {len(due_tasks)} –∑–∞–¥–∞—á")
    
    if len(due_tasks) > 0:
        logger.info(f"–ù–∞–π–¥–µ–Ω—ã –∑–∞–¥–∞—á–∏ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {due_tasks}")
        
        for task_id, user_id, text, done, reminder_time in due_tasks:
            try:
                # –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ callback_data
                keyboard = [
                    [InlineKeyboardButton("‚úÖ –ó–∞–¥–∞—á–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞", callback_data=f"toggle_{task_id}")],
                    [InlineKeyboardButton("üîï –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ", callback_data=f"delete_reminder_{task_id}")],
                    [InlineKeyboardButton("üîî –û—Ç–ª–æ–∂–∏—Ç—å –Ω–∞ 1 —á–∞—Å", callback_data=f"snooze_reminder_{task_id}_60")],
                    [InlineKeyboardButton("üîî –û—Ç–ª–æ–∂–∏—Ç—å –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤ —ç—Ç–æ –∂–µ –≤—Ä–µ–º—è", callback_data=f"snooze_reminder_{task_id}_tomorrow")],
                    [InlineKeyboardButton("üïê –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è", callback_data=f"custom_reminder_{task_id}")]
                ]
                
                await context.bot.send_message(
                    chat_id=user_id,
                    text=f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {text}",
                    reply_markup=InlineKeyboardMarkup(keyboard)
                )
                
                logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} –æ –∑–∞–¥–∞—á–µ {task_id}")
                
                # –£–¥–∞–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
                set_reminder(task_id, None)
                
            except Exception as e:
                if "bot can't initiate conversation" in str(e) or "Forbidden" in str(e):
                    logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}, —É–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É {task_id}")
                    set_reminder(task_id, None)
                else:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è: {e}")
